[{"/home/eman/labpush/react/my-app/src/index.js":"1","/home/eman/labpush/react/my-app/src/reportWebVitals.js":"2","/home/eman/labpush/react/my-app/src/App.js":"3","/home/eman/labpush/react/my-app/src/Longpolling.js":"4","/home/eman/labpush/react/my-app/src/helpers/fetch.js":"5","/home/eman/labpush/react/my-app/src/shortpolling.js":"6"},{"size":500,"mtime":1619007909154,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1619007909154,"results":"9","hashOfConfig":"8"},{"size":206,"mtime":1619096792443,"results":"10","hashOfConfig":"8"},{"size":1433,"mtime":1619096203240,"results":"11","hashOfConfig":"8"},{"size":344,"mtime":1619094424468,"results":"12","hashOfConfig":"8"},{"size":1925,"mtime":1619096927794,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1nvx3c2",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/eman/labpush/react/my-app/src/index.js",[],["29","30"],"/home/eman/labpush/react/my-app/src/reportWebVitals.js",[],"/home/eman/labpush/react/my-app/src/App.js",["31"],"\nimport './App.css';\nimport Longpulling from './Longpolling.js';\nimport Shortpolling from './shortpolling.js';\n\n// const App = () => <Longpulling />;\nconst App = () => <Shortpolling />;\n\nexport default App;","/home/eman/labpush/react/my-app/src/Longpolling.js",[],"/home/eman/labpush/react/my-app/src/helpers/fetch.js",[],"/home/eman/labpush/react/my-app/src/shortpolling.js",["32"],"import { useEffect, useRef, useState } from 'react';\nimport PostData from './helpers/fetch';\n\nconst ShortPolling = (props) => {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [newMessages, setnewMessages] = useState([]);\n    let previousRequest = useRef(0);\n\n    const handleSubmit = (e) => {\n        let currentDateTime = Date.now()\n        e.preventDefault();\n        PostData('http://localhost:3000/messages', { message, currentDateTime }).then(() => setMessage('')); //post method & featch ob\n    };\n\n    useEffect(() => {\n        setInterval(async () => {\n            let currentDateTime = Date.now();\n            const data = await fetch('http://localhost:3000/messages', {  // get method\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Previous-DateTime': previousRequest.current\n                }\n            }).then((res) => res.json());\n            previousRequest.current = currentDateTime;\n            setnewMessages(data);\n        }, 5000)\n    }, []);\n\n    useEffect(() => {\n        setMessages(messages.concat(newMessages)) // concat masages old with new\n    }, [newMessages]);\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={handleSubmit}>\n                <input className=\"form-control form-control-lg\" type=\"text\" placeholder=\"Enter your message\"\n                    name=\"message\" id=\"message\" required onChange={((e) => setMessage(e.target.value))} value={message}></input>\n            </form>\n            <h2>Messages</h2>\n            {/* {console.log(messages)} */}\n            <ul className=\"list-group\">\n                {\n                    messages.map((m) => <li key={m.currentDateTime} className=\"list-group-item\">{m.message}</li>)\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default ShortPolling;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":3,"column":8,"nodeType":"39","messageId":"40","endLine":3,"endColumn":19},{"ruleId":"41","severity":1,"message":"42","line":33,"column":8,"nodeType":"43","endLine":33,"endColumn":21,"suggestions":"44"},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'Longpulling' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.","ArrayExpression",["47"],"no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [messages, newMessages]",{"range":"50","text":"51"},[1224,1237],"[messages, newMessages]"]