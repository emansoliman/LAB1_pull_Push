{"ast":null,"code":"var _jsxFileName = \"/home/eman/labpush/react/my-app/src/Longpolling.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport postData from './helpers/fetch.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Longpolling = props => {\n  _s();\n\n  const [message, Setmassage] = useState('');\n  const [messages, Setmassages] = useState([]);\n\n  const handlesubmit = e => {\n    e.preventDefault();\n    postData('http://localhost:3001/massages', {\n      message\n    }).then(() => Setmassage(''));\n  };\n\n  useEffect(() => {\n    fetch('http://localhost:3001/massages/subscribe').then(res => res.json()).then(data => Setmassages(messages.concat(data)));\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"form\",\n        className: \"validate\",\n        onSubmit: handlesubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"message \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"message\",\n            id: \"message\",\n            placeholder: \"message\",\n            required: true,\n            onChange: e => Setmassage(e.target.value),\n            value: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: m.message\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 52\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Longpolling, \"eX4CWo7gB5+wnhsmeRxkx3aQiNs=\");\n\n_c = Longpolling;\nexport default Longpolling;\n\nvar _c;\n\n$RefreshReg$(_c, \"Longpolling\");","map":{"version":3,"sources":["/home/eman/labpush/react/my-app/src/Longpolling.js"],"names":["useEffect","useState","postData","Longpolling","props","message","Setmassage","messages","Setmassages","handlesubmit","e","preventDefault","then","fetch","res","json","data","concat","target","value","map","m","i"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,oBAArB;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,QAAQ,CAAC,gCAAD,EAAmC;AAAEG,MAAAA;AAAF,KAAnC,CAAR,CAAwDO,IAAxD,CAA6D,MAAMN,UAAU,CAAC,EAAD,CAA7E;AAEH,GAJD;;AAMAN,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,KAAK,CAAC,0CAAD,CAAL,CACKD,IADL,CACWE,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKH,IAFL,CAEWI,IAAD,IAAUR,WAAW,CAACD,QAAQ,CAACU,MAAT,CAAgBD,IAAhB,CAAD,CAF/B;AAIH,GALQ,EAKN,CAACT,QAAD,CALM,CAAT;AAMA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAM,QAAA,EAAE,EAAC,MAAT;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,QAAQ,EAAEE,YAA/C;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,SAAxB;AAAkC,YAAA,EAAE,EAAC,SAArC;AAA+C,YAAA,WAAW,EAAC,SAA3D;AAAqE,YAAA,QAAQ,MAA7E;AAA8E,YAAA,QAAQ,EAAGC,CAAD,IAAOJ,UAAU,CAACI,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAzG;AAA2H,YAAA,KAAK,EAAEd;AAAlI;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAEQE,QAAQ,CAACa,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,kBAAU;AAAA,sBAAaD,CAAC,CAAChB;AAAf,aAASiB,CAAT;AAAA;AAAA;AAAA;AAAA,kBAAvB;AAFR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA,kBADJ;AA4BH,CA5CD;;GAAMnB,W;;KAAAA,W;AA8CN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport postData from './helpers/fetch.js';\n\nconst Longpolling = (props) => {\n    const [message, Setmassage] = useState('');\n    const [messages, Setmassages] = useState([]);\n\n    const handlesubmit = (e) => {\n        e.preventDefault();\n        postData('http://localhost:3001/massages', { message }).then(() => Setmassage(''));\n\n    };\n\n    useEffect(() => {\n        fetch('http://localhost:3001/massages/subscribe')\n            .then((res) => res.json())\n            .then((data) => Setmassages(messages.concat(data)));\n\n    }, [messages]);\n    return (\n        <>\n            <div className=\"form-center\">\n                <form id=\"form\" className=\"validate\" onSubmit={handlesubmit}>\n                    <div className=\"form-field\">\n                        <label>message </label>\n                        <input type=\"text\" name=\"message\" id=\"message\" placeholder=\"message\" required onChange={(e) => Setmassage(e.target.value)} value={message} />\n\n                    </div>\n\n                </form>\n\n            </div>\n            <section>\n                <div>\n                    <h2>messages</h2>\n                    <ul>\n                        {\n                            messages.map((m, i) => <li key={i}>{m.message}</li>)\n                        }\n                    </ul>\n                </div>\n            </section>\n\n        </>\n\n\n    );\n};\n\nexport default Longpolling"]},"metadata":{},"sourceType":"module"}